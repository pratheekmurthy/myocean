const Joi = require("joi");
const schemas = {
  getUserRuleDropdownSchema: Joi.object().keys({}),
  fetchUserRuleListSchema: Joi.object().keys({
    usermasterfk: Joi.number().required(),
    is_active: Joi.number(),
    PageNumber: Joi.number(),
    PageSize: Joi.number(),
    SkipRecords: Joi.number(),
    TotalRecords: Joi.number(),
    EndRecord: Joi.number(),
    ExportFlag: Joi.number(),
  }),
  fetchUserRuleDetailsSchema: Joi.object().keys({
    userruleconfigpk: Joi.number().required(),
    is_active: Joi.number(),
  }),
  getUserRuleAndPreferenceSchema: Joi.object().keys({
    usermasterfk: Joi.number().required(),
    is_active: Joi.number(),
  }),
  saveUserRulesSchema: Joi.object().keys({
    userruleconfigpk: Joi.number(),
    usermasterfk: Joi.number(),
    userrolefk: Joi.number(),
    is_active: Joi.number(),
    created_by_fk: Joi.number(),
    created_on: Joi.string().allow(""),
    last_updated_by_fk: Joi.number(),
    last_updated_on: Joi.string().allow(""),
    version_no: Joi.number(),
    rules: Joi.object().keys({
      rulesettingpk: Joi.number(),
      ruleconfigfk: Joi.number(),
      pass_min_length: Joi.number(),
      pass_max_length: Joi.number(),
      pass_cap_letter: Joi.boolean(),
      pass_special_char: Joi.boolean(),
      pass_numeric: Joi.boolean(),
      pass_space_allowed: Joi.boolean(),
      pass_history: Joi.number(),
      pass_userid_allowed: Joi.boolean(),
      pass_change_days: Joi.number(),
      pass_change_remainder: Joi.number(),
      max_image_size: Joi.number(),
      image_file_type: Joi.string().allow(""),
      max_upload_size: Joi.number(),
      file_storage_loc: Joi.string().allow(""),
      is_active: Joi.number(),
      created_by_fk: Joi.number(),
      created_on: Joi.string().allow(""),
      last_updated_by_fk: Joi.number(),
      last_updated_on: Joi.string().allow(""),
      version_no: Joi.number(),
      permitted_file_types: Joi.string().allow(""),
    }),
    preference: Joi.object().keys({
      preferencesettingpk: Joi.number(),
      ruleconfigfk: Joi.number(),
      preferred_language: Joi.string().allow(""),
      no_of_record: Joi.number(),
      date_range: Joi.number(),
      default_screen: Joi.string().allow(""),
      no_recent_access_menu: Joi.number(),
      default_otp_type: Joi.string().allow(""),
      default_download_loc: Joi.string().allow(""),
      message_preference: Joi.string().allow(""),
      alert_preference: Joi.string().allow(""),
      is_active: Joi.number(),
      created_by_fk: Joi.number(),
      created_on: Joi.string().allow(""),
      last_updated_by_fk: Joi.number(),
      last_updated_on: Joi.string().allow(""),
      version_no: Joi.number(),
    }),
  }),
  deactivateUserRuleSchema: Joi.object().keys({
    userruleconfigpk: Joi.number(),
    is_active: Joi.number(),
  }),
  deleteUserRuleSchema: Joi.object().keys({
    customermasterpk: Joi.number(),
  }),
};
module.exports = schemas;
